{"version":3,"sources":["dragon.gif","App.js","reportWebVitals.js","index.js"],"names":["Element","xy","scale","movement","stylePosition","top","left","transform","className","style","src","dragon","alt","App","useState","setXy","setMovement","onMouseMove","e","movementX","movementY","clientX","clientY","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,G,MAAA,IAA0B,oCCInCA,EAAU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAEXC,EAF8B,EAAfC,SAEE,GAAK,GAAK,EAAI,EAC/BC,EAAgB,CACpBC,IAAI,GAAD,OAAKJ,EAAG,GAAK,IAAb,MACHK,KAAK,GAAD,OAAKL,EAAG,GAAK,IAAb,MACJM,UAAU,UAAD,OALI,EAKJ,uBAAiCL,EAAjC,MAGX,OACE,qBAAKM,UAAU,UAAUC,MAAOL,EAAhC,SACE,qBAAKM,IAAKC,EAAQC,IAAKD,OAqBdE,MAhBf,WAAgB,IAAD,EACOC,mBAAS,CAAC,EAAG,IADpB,mBACNb,EADM,KACFc,EADE,OAEmBD,mBAAS,CAAC,EAAG,IAFhC,mBAENX,EAFM,KAEIa,EAFJ,KASb,OACE,qBAAKR,UAAU,MAAMS,YANH,SAACC,GACnBF,EAAY,CAACE,EAAEC,UAAWD,EAAEE,YAC5BL,EAAM,CAACG,EAAEG,QAASH,EAAEI,WAIpB,SACE,cAAC,EAAD,CAASrB,GAAIA,EAAIE,SAAUA,OCnBlBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1cf7d43b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dragon.6db7f34f.gif\";","import \"./App.css\";\nimport { useState } from \"react\";\nimport dragon from \"./dragon.gif\";\n\nconst Element = ({ xy, movement }) => {\n  const degree = 0;\n  const scale = movement[0] > 0 ? -1 : 1;\n  const stylePosition = {\n    top: `${xy[1] - 140}px`,\n    left: `${xy[0] - 100}px`,\n    transform: `rotate(${degree}deg) scaleX(${scale})`,\n  };\n\n  return (\n    <div className=\"Element\" style={stylePosition}>\n      <img src={dragon} alt={dragon}></img>\n    </div>\n  );\n};\n\nfunction App() {\n  const [xy, setXy] = useState([0, 0]);\n  const [movement, setMovement] = useState([0, 0]);\n\n  const onMouseMove = (e) => {\n    setMovement([e.movementX, e.movementY]);\n    setXy([e.clientX, e.clientY]);\n  };\n\n  return (\n    <div className=\"App\" onMouseMove={onMouseMove}>\n      <Element xy={xy} movement={movement}></Element>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}